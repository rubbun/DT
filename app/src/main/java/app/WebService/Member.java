package app.WebService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 4/15/2015 10:32:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

import app.utils.Global;

public class Member implements KvmSerializable {

    public String memId;
    public String mName;
    public String mImage;
    public boolean oL;
    public String distID;
    public String clubId;
    public String email;
    public String mobile;
    public boolean canEdit;
    public MemberProfile profile;

    public Member() {
    }

    public Member(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("MemId")) {
            Object obj = soapObject.getProperty("MemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                memId = j.toString();
            } else if (obj != null && obj instanceof String) {
                memId = (String) obj;
            }
            Global.val = memId;

        }
        if (soapObject.hasProperty("mName")) {
            Object obj = soapObject.getProperty("mName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                mName = j.toString();
            } else if (obj != null && obj instanceof String) {
                mName = (String) obj;
            }
        }
        if (soapObject.hasProperty("mImage")) {
            Object obj = soapObject.getProperty("mImage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                mImage = j.toString();
            } else if (obj != null && obj instanceof String) {
                mImage = (String) obj;
            }
        }
        if (soapObject.hasProperty("OL")) {
            Object obj = soapObject.getProperty("OL");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                oL = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                oL = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("DistID")) {
            Object obj = soapObject.getProperty("DistID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                distID = j.toString();
            } else if (obj != null && obj instanceof String) {
                distID = (String) obj;
            }
        }
        if (soapObject.hasProperty("ClubId")) {
            Object obj = soapObject.getProperty("ClubId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                clubId = j.toString();
            } else if (obj != null && obj instanceof String) {
                clubId = (String) obj;
            }
        }
        if (soapObject.hasProperty("Email")) {
            Object obj = soapObject.getProperty("Email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                email = j.toString();
            } else if (obj != null && obj instanceof String) {
                email = (String) obj;
            }
        }
        if (soapObject.hasProperty("Mobile")) {
            Object obj = soapObject.getProperty("Mobile");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                mobile = j.toString();
            } else if (obj != null && obj instanceof String) {
                mobile = (String) obj;
            }
        }
        if (soapObject.hasProperty("canEdit")) {
            Object obj = soapObject.getProperty("canEdit");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                canEdit = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                canEdit = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("profile")) {
            SoapObject j = (SoapObject) soapObject.getProperty("profile");
            profile = new MemberProfile(j);
            
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return memId;
            case 1:
                return mName;
            case 2:
                return mImage;
            case 3:
                return oL;
            case 4:
                return distID;
            case 5:
                return clubId;
            case 6:
                return email;
            case 7:
                return mobile;
            case 8:
                return canEdit;
            case 9:
                return profile;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 10;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MemId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "mName";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "mImage";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "OL";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DistID";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ClubId";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Email";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Mobile";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "canEdit";
                break;
            case 9:
                info.type = MemberProfile.class;
                info.name = "profile";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
