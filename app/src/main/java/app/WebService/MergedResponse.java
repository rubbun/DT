package app.WebService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 4/15/2015 10:32:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class MergedResponse implements KvmSerializable {

    public VectorxClub allClubs;
    public String loginError;
    public boolean authenticated;
    public String responseTime;
    public boolean isAdmin;
   public String MemId;
    //MemId

    public MergedResponse() {
    }

    public MergedResponse(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("AllClubs")) {
            SoapObject j = (SoapObject) soapObject.getProperty("AllClubs");
            allClubs = new VectorxClub(j);
        }
        if (soapObject.hasProperty("LoginError")) {
            Object obj = soapObject.getProperty("LoginError");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                loginError = j.toString();
            } else if (obj != null && obj instanceof String) {
                loginError = (String) obj;
            }
        }
        if (soapObject.hasProperty("Authenticated")) {
            Object obj = soapObject.getProperty("Authenticated");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                authenticated = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                authenticated = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ResponseTime")) {
            Object obj = soapObject.getProperty("ResponseTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                responseTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                responseTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsAdmin")) {
            Object obj = soapObject.getProperty("IsAdmin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isAdmin = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isAdmin = (Boolean) obj;
            }
        }

      if (soapObject.hasProperty("MemId")) {
            Object obj = soapObject.getProperty("MemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                MemId = j.toString();
            } else if (obj != null && obj instanceof String) {
                MemId = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return allClubs;
            case 1:
                return loginError;
            case 2:
                return authenticated;
            case 3:
                return responseTime;
            case 4:
                return isAdmin;
            case 5:
                return MemId;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 6;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "AllClubs";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LoginError";
                break;
            case 2:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Authenticated";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ResponseTime";
                break;
            case 4:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsAdmin";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MemId";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
