package app.WebService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 4/15/2015 10:32:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class RecordDetails implements KvmSerializable {

    public String home;
    public String aboutUs;
    public VectorBRecord_SubCategories bCats;
    public String contactP;
    public String contactP_Email;
    public String contactp_AddiEmails;
    public String contactp_PhoneN;
    public String contactp_FaxN;
    public String contactp_PrimaryMob;
    public String contactp_AddiMobNos;
    public String website;
    public String addedByID;

    public RecordDetails() {
    }

    public RecordDetails(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Home")) {
            Object obj = soapObject.getProperty("Home");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                home = j.toString();
            } else if (obj != null && obj instanceof String) {
                home = (String) obj;
            }
        }
        if (soapObject.hasProperty("AboutUs")) {
            Object obj = soapObject.getProperty("AboutUs");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                aboutUs = j.toString();
            } else if (obj != null && obj instanceof String) {
                aboutUs = (String) obj;
            }
        }
        if (soapObject.hasProperty("bCats")) {
            SoapObject j = (SoapObject) soapObject.getProperty("bCats");
            bCats = new VectorBRecord_SubCategories(j);
        }
        if (soapObject.hasProperty("contactP")) {
            Object obj = soapObject.getProperty("contactP");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                contactP = j.toString();
            } else if (obj != null && obj instanceof String) {
                contactP = (String) obj;
            }
        }
        if (soapObject.hasProperty("contactP_Email")) {
            Object obj = soapObject.getProperty("contactP_Email");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                contactP_Email = j.toString();
            } else if (obj != null && obj instanceof String) {
                contactP_Email = (String) obj;
            }
        }
        if (soapObject.hasProperty("contactp_AddiEmails")) {
            Object obj = soapObject.getProperty("contactp_AddiEmails");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                contactp_AddiEmails = j.toString();
            } else if (obj != null && obj instanceof String) {
                contactp_AddiEmails = (String) obj;
            }
        }
        if (soapObject.hasProperty("contactp_PhoneN")) {
            Object obj = soapObject.getProperty("contactp_PhoneN");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                contactp_PhoneN = j.toString();
            } else if (obj != null && obj instanceof String) {
                contactp_PhoneN = (String) obj;
            }
        }
        if (soapObject.hasProperty("contactp_FaxN")) {
            Object obj = soapObject.getProperty("contactp_FaxN");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                contactp_FaxN = j.toString();
            } else if (obj != null && obj instanceof String) {
                contactp_FaxN = (String) obj;
            }
        }
        if (soapObject.hasProperty("contactp_PrimaryMob")) {
            Object obj = soapObject.getProperty("contactp_PrimaryMob");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                contactp_PrimaryMob = j.toString();
            } else if (obj != null && obj instanceof String) {
                contactp_PrimaryMob = (String) obj;
            }
        }
        if (soapObject.hasProperty("contactp_AddiMobNos")) {
            Object obj = soapObject.getProperty("contactp_AddiMobNos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                contactp_AddiMobNos = j.toString();
            } else if (obj != null && obj instanceof String) {
                contactp_AddiMobNos = (String) obj;
            }
        }
        if (soapObject.hasProperty("Website")) {
            Object obj = soapObject.getProperty("Website");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                website = j.toString();
            } else if (obj != null && obj instanceof String) {
                website = (String) obj;
            }
        }
        if (soapObject.hasProperty("AddedByID")) {
            Object obj = soapObject.getProperty("AddedByID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                addedByID = j.toString();
            } else if (obj != null && obj instanceof String) {
                addedByID = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return home;
            case 1:
                return aboutUs;
            case 2:
                return bCats;
            case 3:
                return contactP;
            case 4:
                return contactP_Email;
            case 5:
                return contactp_AddiEmails;
            case 6:
                return contactp_PhoneN;
            case 7:
                return contactp_FaxN;
            case 8:
                return contactp_PrimaryMob;
            case 9:
                return contactp_AddiMobNos;
            case 10:
                return website;
            case 11:
                return addedByID;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 12;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Home";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AboutUs";
                break;
            case 2:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "bCats";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "contactP";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "contactP_Email";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "contactp_AddiEmails";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "contactp_PhoneN";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "contactp_FaxN";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "contactp_PrimaryMob";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "contactp_AddiMobNos";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Website";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AddedByID";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
