package app.WebService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 4/15/2015 10:32:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class LoggedInMemberInfos implements KvmSerializable {

    public String memId;
    public String mName;
    public String mImage;
    public boolean oL;
    public String memAddr;
    public String records;
    public boolean friends;
    public boolean reqSent;
    public boolean reqCame;
    public boolean admin;

    public LoggedInMemberInfos() {
    }

    public LoggedInMemberInfos(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("MemId")) {
            Object obj = soapObject.getProperty("MemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                memId = j.toString();
            } else if (obj != null && obj instanceof String) {
                memId = (String) obj;
            }
        }
        if (soapObject.hasProperty("mName")) {
            Object obj = soapObject.getProperty("mName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                mName = j.toString();
            } else if (obj != null && obj instanceof String) {
                mName = (String) obj;
            }
        }
        if (soapObject.hasProperty("mImage")) {
            Object obj = soapObject.getProperty("mImage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                mImage = j.toString();
            } else if (obj != null && obj instanceof String) {
                mImage = (String) obj;
            }
        }
        if (soapObject.hasProperty("OL")) {
            Object obj = soapObject.getProperty("OL");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                oL = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                oL = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MemAddr")) {
            Object obj = soapObject.getProperty("MemAddr");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                memAddr = j.toString();
            } else if (obj != null && obj instanceof String) {
                memAddr = (String) obj;
            }
        }
        if (soapObject.hasProperty("Records")) {
            Object obj = soapObject.getProperty("Records");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                records = j.toString();
            } else if (obj != null && obj instanceof String) {
                records = (String) obj;
            }
        }
        if (soapObject.hasProperty("Friends")) {
            Object obj = soapObject.getProperty("Friends");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                friends = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                friends = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ReqSent")) {
            Object obj = soapObject.getProperty("ReqSent");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                reqSent = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                reqSent = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ReqCame")) {
            Object obj = soapObject.getProperty("ReqCame");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                reqCame = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                reqCame = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Admin")) {
            Object obj = soapObject.getProperty("Admin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                admin = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                admin = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return memId;
            case 1:
                return mName;
            case 2:
                return mImage;
            case 3:
                return oL;
            case 4:
                return memAddr;
            case 5:
                return records;
            case 6:
                return friends;
            case 7:
                return reqSent;
            case 8:
                return reqCame;
            case 9:
                return admin;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 10;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MemId";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "mName";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "mImage";
                break;
            case 3:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "OL";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MemAddr";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Records";
                break;
            case 6:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Friends";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ReqSent";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ReqCame";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Admin";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
