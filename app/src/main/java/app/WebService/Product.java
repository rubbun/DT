package app.WebService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 4/15/2015 10:32:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Product implements KvmSerializable {

    public String productID;
    public String businessSubCategory;
    public String businessSubCategoryID;
    public String productTitle;
    public String productDescription;
    public String price;
    public String productImage;
    public String productVideo;
    public VectorByte imgdata;
    public boolean del;

    public Product() {
    }

    public Product(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ProductID")) {
            Object obj = soapObject.getProperty("ProductID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productID = j.toString();
            } else if (obj != null && obj instanceof String) {
                productID = (String) obj;
            }
        }
        if (soapObject.hasProperty("BusinessSubCategory")) {
            Object obj = soapObject.getProperty("BusinessSubCategory");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                businessSubCategory = j.toString();
            } else if (obj != null && obj instanceof String) {
                businessSubCategory = (String) obj;
            }
        }
        if (soapObject.hasProperty("BusinessSubCategoryID")) {
            Object obj = soapObject.getProperty("BusinessSubCategoryID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                businessSubCategoryID = j.toString();
            } else if (obj != null && obj instanceof String) {
                businessSubCategoryID = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductTitle")) {
            Object obj = soapObject.getProperty("ProductTitle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productTitle = j.toString();
            } else if (obj != null && obj instanceof String) {
                productTitle = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductDescription")) {
            Object obj = soapObject.getProperty("ProductDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                productDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("Price")) {
            Object obj = soapObject.getProperty("Price");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                price = j.toString();
            } else if (obj != null && obj instanceof String) {
                price = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductImage")) {
            Object obj = soapObject.getProperty("ProductImage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productImage = j.toString();
            } else if (obj != null && obj instanceof String) {
                productImage = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductVideo")) {
            Object obj = soapObject.getProperty("ProductVideo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productVideo = j.toString();
            } else if (obj != null && obj instanceof String) {
                productVideo = (String) obj;
            }
        }
        if (soapObject.hasProperty("imgdata")) {
            SoapPrimitive j = (SoapPrimitive) soapObject.getProperty("imgdata");
            imgdata = new VectorByte(j);
        }
        if (soapObject.hasProperty("Del")) {
            Object obj = soapObject.getProperty("Del");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                del = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                del = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return productID;
            case 1:
                return businessSubCategory;
            case 2:
                return businessSubCategoryID;
            case 3:
                return productTitle;
            case 4:
                return productDescription;
            case 5:
                return price;
            case 6:
                return productImage;
            case 7:
                return productVideo;
            case 8:
                return imgdata.toString();
            case 9:
                return del;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 10;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductID";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "BusinessSubCategory";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "BusinessSubCategoryID";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductTitle";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductDescription";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Price";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductImage";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductVideo";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "imgdata";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Del";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
