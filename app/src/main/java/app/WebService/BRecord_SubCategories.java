package app.WebService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.5
//
// Date Of Creation: 4/15/2015 10:32:00 PM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class BRecord_SubCategories implements KvmSerializable {
    
    public String bSubCatID;
    public String countOfProductsIn;
    public String subCategoryName;
    public String productsCount;
    public VectorProduct _products;

    public BRecord_SubCategories() {
    }

    public BRecord_SubCategories(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("BSubCatID")) {
            Object obj = soapObject.getProperty("BSubCatID");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                bSubCatID = j.toString();
            } else if (obj != null && obj instanceof String) {
                bSubCatID = (String) obj;
            }
        }
        if (soapObject.hasProperty("CountOfProductsIn")) {
            Object obj = soapObject.getProperty("CountOfProductsIn");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                countOfProductsIn = j.toString();
            } else if (obj != null && obj instanceof String) {
                countOfProductsIn = (String) obj;
            }
        }
        if (soapObject.hasProperty("SubCategoryName")) {
            Object obj = soapObject.getProperty("SubCategoryName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                subCategoryName = j.toString();
            } else if (obj != null && obj instanceof String) {
                subCategoryName = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductsCount")) {
            Object obj = soapObject.getProperty("ProductsCount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productsCount = j.toString();
            } else if (obj != null && obj instanceof String) {
                productsCount = (String) obj;
            }
        }
        if (soapObject.hasProperty("_products")) {
            SoapObject j = (SoapObject) soapObject.getProperty("_products");
            _products = new VectorProduct(j);
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return bSubCatID;
            case 1:
                return countOfProductsIn;
            case 2:
                return subCategoryName;
            case 3:
                return productsCount;
            case 4:
                return _products;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 5;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "BSubCatID";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CountOfProductsIn";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SubCategoryName";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductsCount";
                break;
            case 4:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "_products";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
